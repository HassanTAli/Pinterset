.topSection {
  display: flex;
  flex-direction: column;
}

.banner {
  background-color: darkslategray;
  padding: 1rem;
  position: absolute;
  top: 40%;
  left: 43%;
  border-radius: 50%;
  color: white;
  font-size: 1.5rem;
}

.redBtn {
  color: white;
  background-color: red;
}

.profilePhoto {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.profilePhoto .image {
  width: 4rem;
  height: 4rem;
  border-radius: 50%;
}

.NameSection {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.gender {
  display: flex;
  justify-content: center;
  flex-direction: column;
}

.container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}



/* Hide the browser's default radio button */

.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}


/* Create a custom radio button */

.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
  border-radius: 50%;
}


/* On mouse-over, add a grey background color */

.container:hover input~.checkmark {
  background-color: #ccc;
}


/* When the radio button is checked, add a blue background */

.container input:checked~.checkmark {
  background-color: #111111;
}


/* Create the indicator (the dot/circle - hidden when not checked) */

.checkmark::after {
  content: "";
  position: absolute;
  display: none;
}


/* Show the indicator (dot/circle) when checked */

.container input:checked~.checkmark:after {
  display: block;
}


/* Style the indicator (dot/circle) */

.container .checkmark:after {
  top: 9px;
  left: 9px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: white;
}

.claimSettings {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
}

.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked+.slider {
  background-color: #2196F3;
}

input:focus+.slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked+.slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}

.alert {
  padding: 1rem 1rem;
  border: 1px solid transparent;
  border-radius: 0.25rem;
}
.alertDark {
  width: fit-content;
  margin: auto;
  position: absolute;
  bottom: 10%;
  left: 43.5%;
  background-color: rgb(72, 72, 72);
  color: white;
}

/* Customize the label (the container) */
.containerCheckbox {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.containerCheckbox input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmarkCheckbox {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */
.containerCheckbox:hover input~.checkmarkCheckbox {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.containerCheckbox input:checked~.checkmarkCheckbox {
  background-color: #111111;
}

/* Create the checkmarkCheckbox/indicator (hidden when not checked) */
.checkmarkCheckbox:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmarkCheckbox when checked */
.containerCheckbox input:checked~.checkmarkCheckbox:after {
  display: block;
}

/* Style the checkmarkCheckbox/indicator */
.containerCheckbox .checkmarkCheckbox:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.DownBar {
  display: flex;
  justify-content: space-between;
  width: 100vw;
  flex-direction: row;
  flex-wrap: nowrap;
  align-content: center;
  align-items: center;
  position: fixed;
  bottom: 0;
  right: 50px;
  /* z-index: 50; */
  padding-bottom: 10px;
  background-color: white;
}

.borderRaduis50 {
  border-radius: 50%;
}

.questionBtn {
  background-color: white;
  border-radius: 50%;
  width: 60px;
  height: 60px;
}

.questionBtn:hover {
  background-color: #ddd;
}

.svgLogo {
  position: absolute;
  top: 45%;
  right: -0%;
  transform: translate(-50%, -50%);
  color: var(--icon);
}

.posrelative {
  position: relative;
}

/* Reuseable Code */

.m0 {
  margin: 0;
}

.ml1 {
  margin-left: 1rem;
}

.ml05 {
  margin-left: 0.5rem;
}

.mt1 {
  margin-top: 1rem;
}

.mt15 {
  margin-top: 1.5rem;
}

.mr1 {
  margin-right: 1rem;
}

.pb1 {
  padding-bottom: 1rem;
}

.FlexCol {
  display: flex;
  flex-direction: column;
}

.FlexRow {
  display: flex;
  flex-direction: row;
}

.inputSettings {
  border-radius: 15px;
  padding: 0.5rem;
  border: 2px solid #F0F0F0;
}

.inputSettings:focus {
  outline: 2px solid #E2E2E2;
}

.width50 {
  width: 50%;
}

.buttonSettings {
  border: none;
  padding: 0.5rem;
  border-radius: 35px;
  font-weight: bold;
  font-size: 17px;
  background-color: #F0F0F0;
}

.buttonSettings:hover {
  background-color: #E2E2E2;
}

.pt1 {
  padding-top: 1rem;
}

.header3 {
  font-weight: 700;
}

.flexEnd {
  display: flex;
  justify-content: flex-end;
}